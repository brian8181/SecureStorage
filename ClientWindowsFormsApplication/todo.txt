*Todo
		* use consisent numeric types, long vs int, uint ?
		* handle error consistenlly, only create returna boolean?
		* clean tmp.xml & tmp file creation in general
		* file locking / syncronization: this has not been touched
		* add move / copy operations
		* default block algorithm
	
*Notes
	
	*CreateName
		
		#
		let name = "/test/"
		let directory = "/"
		* this is a directory (slash at end), create directory "test/"

		#
		let name = "a/b/test.jpg"
		let directory = "a/b/"
		* this is a file (no slash at end), append to dir "a/b/", create file "a/b/test.jpg"

		#
		let name = "a/b/c/"
		let directory = "a/b/"
		* this is a directory (ends with '/'), append to dir "a/b/", create directory "a/b/c/"
	
	*CreateLock

		*Update a file Sequence: 

			*Lock dir file
			*Lock file
			*delete dir file
			*create new dir file
			*create new file
			*unlock file
			*unlock dir file

				*Notes
					* lock_sha526_expires
					* lock request on expired lock deletes old lock

			*locking strategy
				* create lock
				* test lock exsits, overkill?
				* test no other lock exsits
					* Delete LOCK, wait try again 
				* LOCK OBTAINED


*Done
		
		* exception initialize remote while not a root in GUI
		
		* deleting directories not working correctly, FIX attempt to delete a non empty directory throw exception (no cascade)
			* deleting dose not cascade, deleting directory only deletes the dir file & not all the files & sub dirs
		* Test Read function
		* Delete form specified path
		* create directory a spefified path
		* create file at specified path 
		* figure out how to load xml from string, I am saving to tm.xml as work around
Not Done:

		* add salt to secure name function, 32 bytes store in xml dir file
		* NO! (this would break random access to file by path!) look into a diffent naming schema
					* a guid for each file instead of HMAC, to ease move operations