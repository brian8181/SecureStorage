*Todo
	*Create Version SercureStorageLib (Todo)
		*change SecureStorage to template? still thinking	
		* rename ISecureStorage to IStore, IStorage? after all it is not secure
			*matter a fact the name ISecureStorage should apply to my SecureStorage class, right?
		* IMPLEMENT RANDOM IV
			* may use ArraySegment<T> Structure 
		* CloudUtility need thi? has key, iv stuff duplicated?
		* ISecureStorage interface is locked????	

		* handle error consistenlly, only create returna boolean?
			*handle errors with Exception, just like FileInfo & FileStream objects
		* clean tmp.xml & tmp file creation in general

				 XmlDocument doc = new XmlDocument();
				// encode to string & remove: byte order mark (BOM)
				string xml = UTF8Encoding.UTF8.GetString(data);
				xml = RemoveByteOrderMarkUTF8(xml);
				// save doc
				doc.LoadXml(xml);

				//...
				string xml = doc.OuterXml;
				byte[] data = Encoding.UTF8.GetBytes(xml);
				byte[] crypt = CryptoFunctions.Encrypt(key, data, iv);
				store.Create(secure_dir_name, crypt, FileMode.Append);


		* use consisent numeric types, long vs int, uint ?
	
		* file locking / syncronization: this has not been touched
		* look for all BKP / TODO comments
		* add move / copy operations
		* parma order id CrytoFunction is goofy
			*public static byte[] Encrypt(byte[] key, byte[] data, byte[] iv)

	Done:

		* figure out issue on dependence to Utility library, there should be no dependence to Utility library!
