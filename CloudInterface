ICloudConnection
{
	byte[] GetKey(); // a global key
	byte[] GetIV();  // a global iv, maybe append open to output
	ICloud GetInterface(string user, string pass)
}

ICloud
{

	string GetDirectory(string path);
	bool ValidateSig(byte[] file, byte[] sig);
	void CreateDirectory(string path);
	void CreateFile(string path, byte[] data);
	byte[] ReadFile(string path);

	// use copy & delete to update a file
	void UpdateFile(string path);

	// removes file a loction
	void DeleteFile(string path);

	// create copy of file to another location
	void Copy(string src, string dst);
}

ICrypt
{
	byte[] Decrypt(byte[] iv, byte[] key);
	void Ecrypt(byte[] iv, byte[] key, byte[] data);
	byte[] Hash(byte[] salt, byte[] key, byte[] data); // hash + salt = output
	byte[] ValidateHash(byte[] hash, byte[] data); // hash + salt = input(data)
}

ICloudUtility
{
	GenerateKey();
	GenerateIV();
	CreateCloud();
}



// file inteface

Create
Open
Read
Write
Delete
Update , delete & write

// todo
IFile
{
	FileStream Open(string path, FileMode mode,	FileAccess access);
	public override int Read(byte[] array, int offset, int count);

}


